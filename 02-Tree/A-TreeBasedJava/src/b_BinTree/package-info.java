/**
 * <p>"二叉树"这种数据结构的基本实现</p>
 *
 * <p><strong>数据结构的增删改查(CRUD)思想</strong></p>
 * <p>背景：在关系型数据库中，不管是对于数据库本身，还是对于表，都有且仅有四种基本的操作：增删改查，
 * 其他的操作都是这四种基本操作的变形或是综合。</p>
 * <p>将这种思想引入到数据结构中：数据结构中的“结构”，具有四种增、删、改、查四种基本的操作，其他的高级操作都是这四种基本操作的变形与综合。
 * 其中，“增”的含义是：创建、插入、新增，“删”的含义是：删除元素，“改”的含义是：修改，“查”的含义是：查找，查询。</p>
 * <p>于是，学习任意一种数据结构，只要牢牢把握住这种“结构”的增删改查四种基本操作，其他的操作都是四种基本数据类型的变形与综合！</p>
 *
 * <p><b>增</b></p>
 *  <p>递归方式创建</p>
 *  <p>非递归方式创建</p>
 * <p><b>删</b></p>
 *
 * <p><b>改</b></p>
 *
 * <p><b>查(遍历)</b></p>
 *  前中后序的递归、非递归、层次遍历
 *
 * @Author Hackyle Shawe
 */
package b_BinTree;